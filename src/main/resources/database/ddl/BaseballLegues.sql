CREATE TABLE Users
(
  userName VARCHAR(25) NOT NULL,
  passw VARCHAR(25) NOT NULL,
  email VARCHAR(25) NOT NULL,
  userID INT NOT NULL,
  userRole INT NOT NULL,
  PRIMARY KEY (userID)
);

CREATE SEQUENCE userID_SEQ START WITH 10000 INCREMENT BY 1 MINVALUE 10000;

CREATE OR REPLACE TRIGGER USERID_SEQ_TRIGGER
BEFORE INSERT ON USERS 
FOR EACH ROW
BEGIN
  SELECT userID_SEQ.NEXTVAL
  INTO   :new.userid
  FROM   dual;
END;

CREATE TABLE Address
(
  addressID INT NOT NULL,
  line1 VARCHAR(25) NOT NULL,
  line2 VARCHAR(25),
  city VARCHAR(25) NOT NULL,
  state VARCHAR(2) NOT NULL,
  zip INT NOT NULL,
  addressType CHAR(1) NOT NULL,
  PRIMARY KEY (addressID)
);

CREATE SEQUENCE addressID_SEQ START WITH 10000 INCREMENT BY 1 MINVALUE 10000;

CREATE OR REPLACE TRIGGER addressID_SEQ_TRIGGER
BEFORE INSERT ON Address 
FOR EACH ROW
BEGIN
  SELECT addressID_SEQ.NEXTVAL
  INTO   :new.addressID
  FROM   dual;
END;


CREATE TABLE Phone
(
  phoneID INT NOT NULL,
  phoneNumber INT NOT NULL,
  phneType CHAR(1) NOT NULL,
  PRIMARY KEY (phoneID)
);

CREATE SEQUENCE phoneID_SEQ START WITH 10000 INCREMENT BY 1 MINVALUE 10000;

CREATE OR REPLACE TRIGGER phoneID_SEQ_TRIGGER
BEFORE INSERT ON Phone 
FOR EACH ROW
BEGIN
  SELECT phoneID_SEQ.NEXTVAL
  INTO   :new.phoneID
  FROM   dual;
END;


CREATE TABLE Payment
(
  paymentID INT NOT NULL,
  paymentType CHAR(1) NOT NULL,
  nameOnCard VARCHAR(50) NOT NULL,
  cardNumber INT NOT NULL,
  expDate DATE NOT NULL,
  crvCode INT NOT NULL,
  PRIMARY KEY (paymentID)
);

CREATE SEQUENCE paymentID_SEQ START WITH 10000 INCREMENT BY 1 MINVALUE 10000;

CREATE OR REPLACE TRIGGER paymentID_SEQ_TRIGGER
BEFORE INSERT ON Payment 
FOR EACH ROW
BEGIN
  SELECT paymentID_SEQ.NEXTVAL
  INTO   :new.paymentID
  FROM   dual;
END;

CREATE TABLE League
(
  leagueID INT NOT NULL,
  leagueName VARCHAR(50) NOT NULL,
  leagueLocation VARCHAR(50) NOT NULL,
  userID INT NOT NULL,
  PRIMARY KEY (leagueID),
  FOREIGN KEY (userID) REFERENCES Users(userID)
);

CREATE SEQUENCE leagueID_SEQ START WITH 10000 INCREMENT BY 1 MINVALUE 10000;

CREATE OR REPLACE TRIGGER leagueID_SEQ_TRIGGER
BEFORE INSERT ON League 
FOR EACH ROW
BEGIN
  SELECT leagueID_SEQ.NEXTVAL
  INTO   :new.leagueID
  FROM   dual;
END;

CREATE TABLE Season
(
  seasonID INT NOT NULL,
  seasonTitle VARCHAR(50) NOT NULL,
  seasonStartDt DATE NOT NULL,
  seasonEndDt DATE NOT NULL,
  seasonNumberOfPlayers INT NOT NULL,
  leagueID INT NOT NULL,
  PRIMARY KEY (seasonID, leagueID),
  FOREIGN KEY (leagueID) REFERENCES League(leagueID)
);

CREATE SEQUENCE seasonID_SEQ START WITH 10000 INCREMENT BY 1 MINVALUE 10000;

CREATE OR REPLACE TRIGGER seasonID_SEQ_TRIGGER
BEFORE INSERT ON Season 
FOR EACH ROW
BEGIN
  SELECT seasonID_SEQ.NEXTVAL
  INTO   :new.seasonID
  FROM   dual;
END;

CREATE TABLE Division
(
  divisionID INT NOT NULL,
  divisionTitle VARCHAR(50) NOT NULL,
  divisionMinAge INT NOT NULL,
  divisionMaxAge INT NOT NULL,
  divisionNumberOfPlayer INT NOT NULL,
  seasonID INT NOT NULL,
  leagueID INT NOT NULL,
  PRIMARY KEY (divisionID, seasonID, leagueID),
  FOREIGN KEY (seasonID, leagueID) REFERENCES Season(seasonID, leagueID)
);

CREATE SEQUENCE divisionID_SEQ START WITH 10000 INCREMENT BY 1 MINVALUE 10000;

CREATE OR REPLACE TRIGGER divisionID_SEQ_TRIGGER
BEFORE INSERT ON Division 
FOR EACH ROW
BEGIN
  SELECT divisionID_SEQ.NEXTVAL
  INTO   :new.divisionID
  FROM   dual;
END;


CREATE TABLE Field
(
  fieldID INT NOT NULL,
  fieldName VARCHAR(50) NOT NULL,
  fieldLocation VARCHAR(25) NOT NULL,
  PRIMARY KEY (fieldID)
);

CREATE SEQUENCE fieldID_SEQ START WITH 10000 INCREMENT BY 1 MINVALUE 10000;

CREATE OR REPLACE TRIGGER fieldID_SEQ_TRIGGER
BEFORE INSERT ON Field 
FOR EACH ROW
BEGIN
  SELECT fieldID_SEQ.NEXTVAL
  INTO   :new.fieldID
  FROM   dual;
END;

CREATE TABLE AddressType
(
  addressTypeID CHAR(1) NOT NULL,
  addressType VARCHAR(25) NOT NULL,
  PRIMARY KEY (addressTypeID)
);

CREATE SEQUENCE addressTypeID_SEQ START WITH 10000 INCREMENT BY 1 MINVALUE 10000;

CREATE OR REPLACE TRIGGER addressTypeID_SEQ_TRIGGER
BEFORE INSERT ON AddressType 
FOR EACH ROW
BEGIN
  SELECT addressTypeID_SEQ.NEXTVAL
  INTO   :new.addressTypeID
  FROM   dual;
END;

CREATE TABLE PhoneType
(
  phoneTypeID VARCHAR(1) NOT NULL,
  phoneType VARCHAR(25) NOT NULL,
  PRIMARY KEY (phoneTypeID)
);

CREATE SEQUENCE phoneTypeID_SEQ START WITH 10000 INCREMENT BY 1 MINVALUE 10000;

CREATE OR REPLACE TRIGGER phoneTypeID_SEQ_TRIGGER
BEFORE INSERT ON PhoneType 
FOR EACH ROW
BEGIN
  SELECT phoneTypeID_SEQ.NEXTVAL
  INTO   :new.phoneTypeID
  FROM   dual;
END;

CREATE TABLE PaymentType
(
  paymentTypeID VARCHAR(1) NOT NULL,
  paymentType VARCHAR(25) NOT NULL,
  PRIMARY KEY (paymentTypeID)
);

CREATE SEQUENCE paymentTypeID_SEQ START WITH 10000 INCREMENT BY 1 MINVALUE 10000;

CREATE OR REPLACE TRIGGER paymentTypeID_SEQ_TRIGGER
BEFORE INSERT ON PaymentType 
FOR EACH ROW
BEGIN
  SELECT paymentTypeID_SEQ.NEXTVAL
  INTO   :new.paymentTypeID
  FROM   dual;
END;

CREATE TABLE UserRole
(
  roleID CHAR(1) NOT NULL,
  userRole VARCHAR(25) NOT NULL,
  PRIMARY KEY (roleID)
);

CREATE SEQUENCE roleID_SEQ START WITH 10000 INCREMENT BY 1 MINVALUE 10000;

CREATE OR REPLACE TRIGGER roleID_SEQ_TRIGGER
BEFORE INSERT ON UserRole 
FOR EACH ROW
BEGIN
  SELECT roleID_SEQ.NEXTVAL
  INTO   :new.roleID
  FROM   dual;
END;

CREATE TABLE StateLookUp
(
  stateID CHAR(2) NOT NULL,
  state VARCHAR(25) NOT NULL,
  PRIMARY KEY (stateID)
);

CREATE SEQUENCE stateID_SEQ START WITH 10000 INCREMENT BY 1 MINVALUE 10000;

CREATE OR REPLACE TRIGGER stateID_SEQ_TRIGGER
BEFORE INSERT ON StateLookUp 
FOR EACH ROW
BEGIN
  SELECT stateID_SEQ.NEXTVAL
  INTO   :new.stateID
  FROM   dual;
END;

CREATE TABLE Person
(
  firstName VARCHAR(25) NOT NULL,
  lastName VARCHAR(25) NOT NULL,
  middleName VARCHAR(25),
  dob DATE NOT NULL,
  personID INT NOT NULL,
  userID INT,
  addressID INT,
  phoneID INT,
  paymentID INT,
  PRIMARY KEY (personID),
  FOREIGN KEY (userID) REFERENCES Users(userID),
  FOREIGN KEY (addressID) REFERENCES Address(addressID),
  FOREIGN KEY (phoneID) REFERENCES Phone(phoneID),
  FOREIGN KEY (paymentID) REFERENCES Payment(paymentID)
);

CREATE SEQUENCE personID_SEQ START WITH 10000 INCREMENT BY 1 MINVALUE 10000;

CREATE OR REPLACE TRIGGER personID_SEQ_TRIGGER
BEFORE INSERT ON Person 
FOR EACH ROW
BEGIN
  SELECT personID_SEQ.NEXTVAL
  INTO   :new.personID
  FROM   dual;
END;

CREATE TABLE RefereePlayer
(
  refereeID INT NOT NULL,
  personID INT NOT NULL,
  PRIMARY KEY (refereeID, personID),
  FOREIGN KEY (personID) REFERENCES Person(personID)
);

CREATE SEQUENCE refereeID_SEQ START WITH 10000 INCREMENT BY 1 MINVALUE 10000;

CREATE OR REPLACE TRIGGER refereeID_SEQ_TRIGGER
BEFORE INSERT ON RefereePlayer 
FOR EACH ROW
BEGIN
  SELECT refereeID_SEQ.NEXTVAL
  INTO   :new.refereeID
  FROM   dual;
END;

CREATE TABLE Team
(
  teamID INT NOT NULL,
  teamTitle VARCHAR(50) NOT NULL,
  teamNumberOfPlayers INT NOT NULL,
  divisionID INT NOT NULL,
  seasonID INT NOT NULL,
  leagueID INT NOT NULL,
  fieldID INT,
  refereeID INT,
  personID INT,
  PRIMARY KEY (teamID, divisionID, seasonID, leagueID),
  FOREIGN KEY (divisionID, seasonID, leagueID) REFERENCES Division(divisionID, seasonID, leagueID),
  FOREIGN KEY (fieldID) REFERENCES Field(fieldID),
  FOREIGN KEY (refereeID, personID) REFERENCES RefereePlayer(refereeID, personID)
);

CREATE SEQUENCE teamID_SEQ START WITH 10000 INCREMENT BY 1 MINVALUE 10000;

CREATE OR REPLACE TRIGGER teamID_SEQ_TRIGGER
BEFORE INSERT ON Team 
FOR EACH ROW
BEGIN
  SELECT teamID_SEQ.NEXTVAL
  INTO   :new.teamID
  FROM   dual;
END;